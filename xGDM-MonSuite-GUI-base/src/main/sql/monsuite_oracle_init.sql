---
-- #%L
-- xGDM-MonSuite GUI (Base)
-- %%
-- Copyright (C) 2022 - 2025 grit GmbH
-- %%
-- Permission is hereby granted, free of charge, to any person obtaining a copy
-- of this software and associated documentation files (the "Software"), to deal
-- in the Software without restriction, including without limitation the rights
-- to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-- copies of the Software, and to permit persons to whom the Software is
-- furnished to do so, subject to the following conditions:
-- 
-- The above copyright notice and this permission notice shall be included in
-- all copies or substantial portions of the Software.
-- 
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-- IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-- FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-- AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-- LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-- OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
-- THE SOFTWARE.
-- #L%
---
--------------------------------------------------------
--  Table GDI_MONITOR
--------------------------------------------------------
CREATE TABLE GDI_MONITOR (
	DAEMON_ID NUMBER(38,0) NOT NULL, 
	NAME VARCHAR2(100 BYTE) NOT NULL, 
	HOST VARCHAR2(15 BYTE) NOT NULL, 
	STATUS NUMBER(1,0) NOT NULL,
	CONSTRAINT GDI_DAEMON_PK1 PRIMARY KEY (DAEMON_ID)
);

CREATE UNIQUE INDEX GDI_DAEMON_UK_NAME ON GDI_MONITOR (NAME);
ALTER TABLE GDI_MONITOR ADD CONSTRAINT GDI_DAEMON_UK_NAME UNIQUE (NAME) USING INDEX;

CREATE UNIQUE INDEX GDI_DAEMON_UK_HOST ON GDI_MONITOR (HOST);
ALTER TABLE GDI_MONITOR ADD CONSTRAINT GDI_DAEMON_UK_HOST UNIQUE (HOST) USING INDEX;

--------------------------------------------------------
--  Table GDI_PERSON
--------------------------------------------------------
CREATE TABLE GDI_PERSON (
	PERSON_ID NUMBER(38,0) NOT NULL, 
	NAME VARCHAR2(200 BYTE) NOT NULL, 
	MAIL VARCHAR2(1000 BYTE), 
	FAX VARCHAR2(1000 BYTE), 
	SMS VARCHAR2(1000 BYTE), 
	SNMP VARCHAR2(400 BYTE),
	CONSTRAINT GDI_PERSON_PK1 PRIMARY KEY (PERSON_ID)
);

CREATE UNIQUE INDEX GDI_PERSON_UK_NAME ON GDI_PERSON (NAME);
ALTER TABLE GDI_PERSON ADD CONSTRAINT GDI_PERSON_UK_NAME UNIQUE (NAME) USING INDEX;

--------------------------------------------------------
--  Table GDI_SENSOR_TYP
--------------------------------------------------------
CREATE TABLE GDI_SENSOR_TYP (
	SENSOR_TYP_ID VARCHAR2(10 BYTE) NOT NULL, 
	NAME VARCHAR2(100 BYTE) NOT NULL,
	CONSTRAINT GDI_SENSOR_TYP_PK1 PRIMARY KEY (SENSOR_TYP_ID)
);

CREATE UNIQUE INDEX GDI_SENSOR_TYP_UK_NAME ON GDI_SENSOR_TYP (NAME);
ALTER TABLE GDI_SENSOR_TYP ADD CONSTRAINT GDI_SENSOR_TYP_UK_NAME UNIQUE (NAME) USING INDEX;

--------------------------------------------------------
--  Table GDI_MESSAGE_TYP
--------------------------------------------------------
CREATE TABLE GDI_MESSAGE_TYP (
	MESSAGE_TYP_ID NUMBER(38,0) NOT NULL, 
	NAME VARCHAR2(50 BYTE) NOT NULL,
	CONSTRAINT GDI_MESSAGE_TYP_PK1 PRIMARY KEY (MESSAGE_TYP_ID)
);

--------------------------------------------------------
--  Table GDI_SENSOR
--------------------------------------------------------
CREATE TABLE GDI_SENSOR (
	SENSOR_ID NUMBER(38,0) NOT NULL, 
	NAME VARCHAR2(200 BYTE), 
	SENSOR_TYP_ID VARCHAR2(10 BYTE) NOT NULL, 
	DAEMON_ID NUMBER(38,0) NOT NULL, 
	URL VARCHAR2(500 BYTE), 
	LAYER_AVAIL VARCHAR2(500 BYTE), 
	VERSION_STRING VARCHAR2(100 BYTE), 
	LAYER_IMGCHECK VARCHAR2(500 BYTE), 
	HTTP_USER VARCHAR2(100 BYTE), 
	HTTP_PASS VARCHAR2(100 BYTE), 
	IMS_PIPE VARCHAR2(100 BYTE), 
	IMS_HOST VARCHAR2(100 BYTE), 
	IMS_ACTION NUMBER(10,0), 
	APP_USER VARCHAR2(100 BYTE), 
	APP_PASS VARCHAR2(100 BYTE), 
	DBP_DATABASE VARCHAR2(200 BYTE), 
	DBP_ACTION NUMBER(10,0), 
	FEATURE_CAP VARCHAR2(1500 BYTE), 
	FEATURE_GET VARCHAR2(1500 BYTE), 
	PROXY VARCHAR2(250 BYTE), 
	SRS VARCHAR2(250 BYTE), 
	BBOX VARCHAR2(500 BYTE), 
	STYLES_IMGCHECK VARCHAR2(500 BYTE), 
	FORMAT_IMGCHECK VARCHAR2(500 BYTE), 
	REGEXP_REQ VARCHAR2(500 BYTE), 
	REGEXP_NOT VARCHAR2(500 BYTE), 
	VALID_CODE VARCHAR2(250 BYTE), 
	IMAGE_SIZE VARCHAR2(150 BYTE), 
	IMAGE_DIR VARCHAR2(150 BYTE), 
	SQL_CMD VARCHAR2(250 BYTE), 
	MAP_NAME_ID NUMBER, 
	SCALE NUMBER, 
	ROTATION NUMBER, 
	CENTER_POS VARCHAR2(250 BYTE), 
	STRING_PROP VARCHAR2(1000 BYTE), 
	RES_DPI NUMBER, 
	FMT_NAME VARCHAR2(50 BYTE), 
	MAP_MXD VARCHAR2(250 BYTE),
	VERSION NUMBER(38, 0) DEFAULT 0,
	CONSTRAINT GDI_SENSOR_PK1 PRIMARY KEY (SENSOR_ID),
	CONSTRAINT GDI_SENSOR_FK_DAEMON FOREIGN KEY (DAEMON_ID) REFERENCES GDI_MONITOR (DAEMON_ID),
	CONSTRAINT GDI_SENSOR_FK_TYP FOREIGN KEY (SENSOR_TYP_ID) REFERENCES GDI_SENSOR_TYP (SENSOR_TYP_ID)
);

--------------------------------------------------------
--  Table GDI_CHECK_TASK
--------------------------------------------------------
CREATE TABLE GDI_CHECK_TASK (
	TASK_ID NUMBER(38,0) NOT NULL, 
	SENSOR_ID NUMBER(38,0) NOT NULL, 
	NAME VARCHAR2(200 BYTE), 
	START_DATE DATE, 
	END_DATE DATE, 
	START_TIME VARCHAR2(5 BYTE), 
	END_TIME VARCHAR2(5 BYTE), 
	TIMEOUT NUMBER(5,0), 
	PAUSE NUMBER(5,0), 
	VERSION NUMBER(38, 0) DEFAULT 0,
	CHECKDAY_0 NUMBER(2,0) DEFAULT 0 NOT NULL, 
	CHECKDAY_1 NUMBER(2,0) DEFAULT 0 NOT NULL, 
	CHECKDAY_2 NUMBER(2,0) DEFAULT 0 NOT NULL, 
	CHECKDAY_3 NUMBER(2,0) DEFAULT 0 NOT NULL, 
	CHECKDAY_4 NUMBER(2,0) DEFAULT 0 NOT NULL, 
	CHECKDAY_5 NUMBER(2,0) DEFAULT 0 NOT NULL, 
	CHECKDAY_6 NUMBER(2,0) DEFAULT 0 NOT NULL,
	CONSTRAINT GDI_CHECK_TASK_PK1 PRIMARY KEY (TASK_ID),
	CONSTRAINT GDI_CHECK_TASK_FK_SENSOR FOREIGN KEY (SENSOR_ID) REFERENCES GDI_SENSOR (SENSOR_ID)
);

CREATE UNIQUE INDEX GDI_CHECK_TASK_UK_SENSOR ON GDI_CHECK_TASK (SENSOR_ID);
ALTER TABLE GDI_CHECK_TASK ADD CONSTRAINT GDI_CHECK_TASK_UK_SENSOR UNIQUE (SENSOR_ID) USING INDEX;

--------------------------------------------------------
--  Table GDI_MESSAGE
--------------------------------------------------------
CREATE TABLE GDI_MESSAGE (
	PERSON_ID NUMBER(38,0) NOT NULL,
	TASK_ID NUMBER(38,0) NOT NULL,
	MESSAGE_TYP_ID NUMBER(38,0) NOT NULL,
	ID NUMBER(38,0) NOT NULL,
	CONSTRAINT GDI_MESSAGE_PK1 PRIMARY KEY (PERSON_ID, TASK_ID, MESSAGE_TYP_ID),
	CONSTRAINT GDI_CHECK_TASK_FK_MESSAGE FOREIGN KEY (TASK_ID) REFERENCES GDI_CHECK_TASK (TASK_ID) ON DELETE CASCADE,
	CONSTRAINT GDI_MESSAGE_FK_MESSAGE_TYP FOREIGN KEY (MESSAGE_TYP_ID) REFERENCES GDI_MESSAGE_TYP (MESSAGE_TYP_ID),
	CONSTRAINT GDI_MESSAGE_FK_PERSON FOREIGN KEY (PERSON_ID) REFERENCES GDI_PERSON (PERSON_ID) ON DELETE CASCADE
);

CREATE UNIQUE INDEX GDI_MESSAGE_ID ON GDI_MESSAGE (ID);
ALTER TABLE GDI_MESSAGE ADD CONSTRAINT GDI_MESSAGE_ID UNIQUE (ID) USING INDEX;

--------------------------------------------------------
--  Table GDI_RESULTCODE
--------------------------------------------------------
CREATE TABLE GDI_RESULTCODE (
	RESULT_ID NUMBER(38,0) NOT NULL, 
	NAME VARCHAR2(100 BYTE) NOT NULL, 
	DESCRIPTION VARCHAR2(1000 BYTE),
	CONSTRAINT GDI_RESULTCODE_PK1 PRIMARY KEY (RESULT_ID)
);

CREATE UNIQUE INDEX GDI_RESULTCODE_UK_NAME ON GDI_RESULTCODE (NAME);
ALTER TABLE GDI_RESULTCODE ADD CONSTRAINT GDI_RESULTCODE_UK_NAME UNIQUE (NAME) USING INDEX;

--------------------------------------------------------
-- SEQUENCES
--------------------------------------------------------
CREATE SEQUENCE GDI_CHECK_TASK_SEQ MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER NOCYCLE;
CREATE SEQUENCE GDI_LOG_CONTROLLER_SEQ MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER NOCYCLE;
CREATE SEQUENCE GDI_LOG_MONITOR_SEQ MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER NOCYCLE;
CREATE SEQUENCE GDI_LOG_SENSOR_SEQ MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER NOCYCLE;
CREATE SEQUENCE GDI_MESSAGE_SEQ MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE NOORDER NOCYCLE;
CREATE SEQUENCE GDI_MONITOR_SEQ MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER NOCYCLE;
CREATE SEQUENCE GDI_PERSON_SEQ MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER NOCYCLE;
CREATE SEQUENCE GDI_SENSOR_SEQ MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER NOCYCLE;

--------------------------------------------------------
--  Table GDI_LOG_SENSOR
--------------------------------------------------------
CREATE TABLE GDI_LOG_SENSOR (
	LOG_ID NUMBER(38,0) NOT NULL, 
	TASK_ID NUMBER(38,0) NOT NULL, 
	RESULT_ID NUMBER(38,0) NOT NULL, 
	TERM DATE NOT NULL, 
	HOST VARCHAR2(15 BYTE) NOT NULL, 
	DURATION NUMBER(38,0), 
	DETAILS VARCHAR2(1000 BYTE),
	CONSTRAINT GDI_LOG_SENSOR_PK1 PRIMARY KEY (LOG_ID),
	CONSTRAINT GDI_LOG_SENSOR_FK_LOG FOREIGN KEY (TASK_ID) REFERENCES GDI_CHECK_TASK (TASK_ID) ON DELETE CASCADE,
	CONSTRAINT GDI_LOG_SENSOR_FK_RESULT FOREIGN KEY (RESULT_ID) REFERENCES GDI_RESULTCODE (RESULT_ID)
);

CREATE INDEX GDI_LOG_SENSOR_TASK_IDX ON GDI_LOG_SENSOR (TASK_ID);
CREATE INDEX GDI_LOG_SENSOR_TASK_RESULT_IDX ON GDI_LOG_SENSOR (TASK_ID, RESULT_ID);

CREATE OR REPLACE TRIGGER BI_GDI_LOG_SENSOR 
BEFORE INSERT ON GDI_LOG_SENSOR 
FOR EACH ROW 
BEGIN 
SELECT GDI_LOG_SENSOR_seq.nextval INTO :new.LOG_ID FROM dual; END; 
/

--------------------------------------------------------
--  Table GDI_LOG_CONTROLLER
--------------------------------------------------------
CREATE TABLE GDI_LOG_CONTROLLER (
	LOG_ID NUMBER(38,0) NOT NULL, 
	RESULT_ID NUMBER(38,0) NOT NULL, 
	TERM DATE NOT NULL, 
	HOST VARCHAR2(15 BYTE) NOT NULL, 
	DURATION NUMBER(38,0), 
	DETAILS VARCHAR2(1000 BYTE),
	CONSTRAINT GDI_LOG_CONTROLLER_PK1 PRIMARY KEY (LOG_ID),
	CONSTRAINT GDI_LOG_CONTROLLER_FK_RESULT FOREIGN KEY (RESULT_ID) REFERENCES GDI_RESULTCODE (RESULT_ID)
);

CREATE INDEX GDI_LOG_CONTROLLER_RESULT_IDX ON GDI_LOG_CONTROLLER (RESULT_ID);

CREATE OR REPLACE TRIGGER BI_GDI_LOG_CONTROLLER 
BEFORE INSERT ON GDI_LOG_CONTROLLER 
FOR EACH ROW 
BEGIN 
SELECT GDI_LOG_CONTROLLER_seq.nextval INTO :new.LOG_ID FROM dual; END; 
/

--------------------------------------------------------
--  Table GDI_LOG_MONITOR
--------------------------------------------------------
CREATE TABLE GDI_LOG_MONITOR (
	LOG_ID NUMBER(38,0) NOT NULL, 
	RESULT_ID NUMBER(38,0) NOT NULL, 
	TERM DATE NOT NULL, 
	HOST VARCHAR2(15 BYTE) NOT NULL, 
	DURATION NUMBER(38,0), 
	DETAILS VARCHAR2(1000 BYTE),
	CONSTRAINT GDI_LOG_MONITOR_PK1 PRIMARY KEY (LOG_ID),
	CONSTRAINT GDI_LOG_MONITOR_FK1 FOREIGN KEY (RESULT_ID) REFERENCES GDI_RESULTCODE (RESULT_ID)
);

CREATE INDEX GDI_LOG_MONITOR_RESULT_IDX ON GDI_LOG_MONITOR (RESULT_ID);

CREATE OR REPLACE TRIGGER BI_GDI_LOG_MONITOR 
BEFORE INSERT ON GDI_LOG_MONITOR 
FOR EACH ROW 
BEGIN 
SELECT GDI_LOG_MONITOR_seq.nextval INTO :new.LOG_ID FROM dual; END; 
/

--------------------------------------------------------
--  Table GDI_ACTIONS
--------------------------------------------------------
CREATE TABLE GDI_ACTIONS
(
    id NUMBER(38,0) NOT NULL,
    name VARCHAR2(50 BYTE) NOT NULL,
    CONSTRAINT GDI_ACTIONS_PK1 PRIMARY KEY (id)
);
/

INSERT INTO dee_db_version (name, version, "DATE") VALUES ('MonSuite_init', '@@project.version@@', to_char (sysdate, 'YYYY-MM-DD'));
commit;
