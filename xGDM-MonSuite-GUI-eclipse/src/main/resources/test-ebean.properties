###
# #%L
# xGDM-MonSuite GUI Eclipse Local Dev
# %%
# Copyright (C) 2022 - 2025 grit GmbH
# %%
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
# #L%
###
# -------------------------------------------------------------
# Transaction Logging
# -------------------------------------------------------------

# Use java util logging to log transaction details
ebean.loggingToJavaLogger=true

# General logging level:
# NONE -> SUMMARY -> SQL (=ALL)
ebean.logging=SUMMARY
#ebean.logging=SQL
#ebean.logging=ALL

# location of transaction logs
#ebean.logging.directory=logs
#ebean.logging.directory=${catalina.base}/logs/trans

# Specific Log levels (none, summary, binding, sql)
# (not used in >2.7.0)
#ebean.logging.iud=sql
#ebean.logging.query=sql
#ebean.logging.sqlquery=sql
#ebean.logging.txnCommit=none

# -------------------------------------------------------------
# DataSources (If using default Ebean DataSourceFactory)
# -------------------------------------------------------------
# You can specify many DataSources (one per EbeanServer)  and
# one of them is defined as the default/primary DataSource

# specify the default/primary DataSource
#datasource.default=oracleJNDI
datasource.default=postgresJNDI

# JNDI-config
ebean.datasource.factory=jndi
ebean.oracleJNDI.dataSourceJndiName=java:comp/env/jdbc/geodb01/xgdmmon2
ebean.postgresJNDI.dataSourceJndiName=java:comp/env/jdbc/dee/config

#datasource.dpadr.username=pdb
#datasource.dpadr.password=pdb01
#datasource.dpadr.databaseUrl=jdbc:oracle:thin:@//***REMOVED***:1521/***REMOVED***
#datasource.dpadr.databaseDriver=oracle.jdbc.OracleDriver
#datasource.dpadr.minConnections=1
#datasource.dpadr.maxConnections=25
#datasource.dpadr.heartbeatsql=select count(*) from dual
#datasource.dpadr.isolationlevel=read_committed

# develop without security
dev.disablesec=true

overwrite_text.app.title=Monitoring Suite (Dev)
environment.extracss=.view-title-layout { background-color: pink; }

login.adminusername=***REMOVED***

#
login.static.SEC_ADMIN.pass=***ENCYRPTED_PASSWORD_HERE***
login.static.SEC_ADMIN.display=Administrator (SEC_ADMIN)

login.static.Demo.pass=***ENCYRPTED_PASSWORD_HERE***
##lukifer77
login.static.Demo.display=Demobenutzer
login.static.Demo.tabs=status,overview,details,help

login.db.query.oracle=SELECT USER_ID, USERNAME, FIRSTNAME, LASTNAME FROM IGEOSECURITY.SAII_USER WHERE USERNAME = CONCAT('[APP]',:username) AND PASSWORD = :password
login.db.query.postgres=SELECT USER_ID, USERNAME, FIRSTNAME, LASTNAME FROM SAII_USER WHERE USERNAME = CONCAT('[APP]',:username) AND PASSWORD = :password

login.adminright.oracle=SELECT FEATURE_TYPE FROM IGEOSECURITY.SAII_USER_FEATURE UF, IGEOSECURITY.SAII_USER U WHERE UF.USER_ID = U.USER_ID AND USERNAME = CONCAT('[APP]',:username) AND FEATURE_TYPE = 'CE_ADMIN'
login.adminright.postgres=SELECT FEATURE_TYPE FROM SAII_USER_FEATURE UF, SAII_USER U WHERE UF.USER_ID = U.USER_ID AND USERNAME = CONCAT('[APP]',:username) AND FEATURE_TYPE = 'CE_ADMIN'
login.noadmin.tabs=availability,overview,details,help

#login.db.query-secure=SELECT USER_ID, USERNAME, FIRSTNAME, LASTNAME, PASSWORD, PASSWORD_TYPE FROM SAII_USER WHERE USERNAME = CONCAT('[APP]',:username)

download.directory=C:\\Server\\web-app-cfg\\dummy\\files
download.mime.pdf=application/pdf

# default id of daemon for new and edit/save
daemon.default-id=1

checktask.defaultTimeout=30
checktask.defaultPause=1800

sensorstatus.factor=20

# Reportfunktionen f\u00fcr die \u00dcbersicht \u00fcber Meldungen f\u00fcr Pr\u00fcfauftr\u00e4ge (TODO)
report.0.lbl=Gesamt\u00fcbersicht der Meldungen
report.0.sql.0.oracle=SELECT '<h2>Gesamt\u00fcbersicht der Meldungen f\u00fcr Pr\u00fcfauftr\u00e4ge</h2>' html FROM dual
report.0.sql.1.oracle=SELECT '<table class="sqltbl"><tr class="hdr">\
							<td class="v-table-header-wrap" rowspan="2">Pr\u00fcfauftragsname</td>\
							<td class="v-table-header-wrap" rowspan="2">Erste<br/>Meldung</td>\
							<td class="v-table-header-wrap" rowspan="2">Letzte<br/>Meldung</td>\
							<td class="v-table-header-wrap">Erfolgreich</td>\
							<td class="v-table-header-wrap" colspan="5">Fehlgeschlagen</td>\
							<td class="v-table-header-wrap" rowspan="2">Meldungen<br/>Gesamt</td>\</td>\
							</tr><tr class="hdr">\
							<td class="v-table-header-wrap">OK</td>\
							<td class="v-table-header-wrap">Zeit\u00fcberschreitung</td>\
							<td class="v-table-header-wrap">Verbindungsaufbau</td>\
							<td class="v-table-header-wrap">Ohne Angabe</td>\
							<td class="v-table-header-wrap">Falsche Antwort</td>\
							<td class="v-table-header-wrap">Sonstige</td>\
							</tr>' html FROM dual
report.0.sql.2.oracle=SELECT '<tr class="row'||MOD( ROWNUM, 2 )||' tcenter">\
							<td class="tleft">'||CT_NAME||'</td>\
							<td>'||MIN_TERM||'</td>\
							<td>'||MAX_TERM||'</td>\
							<td>'||SUM_RC_1||'<br/>'||SUM_RC_PA_1||' %</td>\
							<td>'||SUM_RC_2||'<br/>'||SUM_RC_PA_2||' %</td>\
							<td>'||SUM_RC_3||'<br/>'||SUM_RC_PA_3||' %</td>\
							<td>'||SUM_RC_4||'<br/>'||SUM_RC_PA_4||' %</td>\
							<td>'||SUM_RC_5||'<br/>'||SUM_RC_PA_5||' %</td>\
							<td>'||SUM_RC_OTHER||'<br/>'||SUM_RC_PA_OTHER||' %</td>\
							<td>'||SUM_RC_ALL||'<br/>100.0 %</td>\
						</tr>' html \
               FROM ( \
                 	SELECT  \
					  lo.TASK_ID,  \
					  lo.HOST,  \
					  MIN(ct.NAME) AS CT_NAME,  \
					  MIN(ct.START_DATE) AS CT_START_DATE,  \
					  MIN(ct.END_DATE) AS CT_END_DATE,  \
					  MIN(ct.START_TIME) AS CT_START_TIME,  \
					  MIN(ct.END_TIME) AS CT_END_TIME,  \
					  MIN(ct.TIMEOUT) AS CT_TIMEOUT,  \
					  MIN(ct.PAUSE) AS CT_PAUSE,  \
					  MIN(sen.NAME) AS SENSOR_NAME,  \
					  MIN(sen.SENSOR_TYP_ID) AS SENSOR_TYP_ID,  \
					  MIN(lo.TERM) AS MIN_TERM,  \
					  MAX(lo.TERM) AS MAX_TERM,  \
					  MIN(mon.NAME) AS MONITOR_NAME,  \
					  MIN(mon.HOST) AS MONITOR_HOST,  \
					  MIN(mon.STATUS) AS MONITOR_STATUS,  \
					  SUM( CASE WHEN lo.RESULT_ID = 1 THEN 1 ELSE  0 END ) AS SUM_RC_1,  \
					  SUM( CASE WHEN lo.RESULT_ID = 2 THEN 1 ELSE  0 END ) AS SUM_RC_2,  \
					  SUM( CASE WHEN lo.RESULT_ID = 3 THEN 1 ELSE  0 END ) AS SUM_RC_3,  \
					  SUM( CASE WHEN lo.RESULT_ID = 4 THEN 1 ELSE  0 END ) AS SUM_RC_4,  \
					  SUM( CASE WHEN lo.RESULT_ID = 5 THEN 1 ELSE  0 END ) AS SUM_RC_5,  \
					  SUM( CASE WHEN lo.RESULT_ID BETWEEN 1 AND 5 THEN 0 ELSE  1 END )  AS SUM_RC_OTHER,  \
					  COUNT( lo.RESULT_ID ) SUM_RC_ALL,  \
					  to_char(  ROUND(SUM( CASE WHEN lo.RESULT_ID = 1 THEN 1 ELSE  0 END ) / COUNT( RESULT_ID ) * 100, 1) ,'990.0') AS SUM_RC_PA_1,  \
					  to_char(  ROUND(SUM( CASE WHEN lo.RESULT_ID = 2 THEN 1 ELSE  0 END ) / COUNT( RESULT_ID ) * 100, 1) ,'990.0') AS SUM_RC_PA_2,  \
					  to_char(  ROUND(SUM( CASE WHEN lo.RESULT_ID = 3 THEN 1 ELSE  0 END ) / COUNT( RESULT_ID ) * 100, 1) ,'990.0') AS SUM_RC_PA_3,  \
					  to_char(  ROUND(SUM( CASE WHEN lo.RESULT_ID = 4 THEN 1 ELSE  0 END ) / COUNT( RESULT_ID ) * 100, 1) ,'990.0') AS SUM_RC_PA_4,  \
					  to_char(  ROUND(SUM( CASE WHEN lo.RESULT_ID = 5 THEN 1 ELSE  0 END ) / COUNT( RESULT_ID ) * 100, 1) ,'990.0') AS SUM_RC_PA_5,  \
					  to_char(  ROUND(SUM( CASE WHEN lo.RESULT_ID BETWEEN 1 AND 5 THEN 0 ELSE 1 END ) / COUNT( RESULT_ID ) * 100, 1) ,'990.0')  AS SUM_RC_PA_OTHER  \
					FROM GDI_LOG_SENSOR lo, GDI_CHECK_TASK ct, GDI_SENSOR sen, GDI_MONITOR mon  \
					WHERE lo.TASK_ID = ct.TASK_ID  \
					AND ct.SeNSOR_ID = sen.SENSOR_ID  \
					AND sen.DAEMON_ID = mon.DAEMON_ID  \
					AND lo.TERM >= :timeStart \
					AND lo.TERM <= :timeEnd \
					GROUP BY lo.TASK_ID, lo.HOST \
               )
report.0.sql.3.oracle=SELECT '</table>' html FROM dual
report.0.sql.4.oracle=SELECT '<br><p>Abfragezeitraum von: '||TO_CHAR(:timeStart,'dd.mm.yyyy HH24:MI:SS')||' bis: '||TO_CHAR(:timeEnd,'dd.mm.yyyy HH24:MI:SS')||'.</p>' html FROM dual

report.0.sql.0.postgres=SELECT '<h2>Gesamt\u00fcbersicht der Meldungen f\u00fcr Pr\u00fcfauftr\u00e4ge</h2>' html
report.0.sql.1.postgres=SELECT '<table class="sqltbl"><tr class="hdr">\
							<td class="v-table-header-wrap" rowspan="2">Pr\u00fcfauftragsname</td>\
							<td class="v-table-header-wrap" rowspan="2">Erste<br/>Meldung</td>\
							<td class="v-table-header-wrap" rowspan="2">Letzte<br/>Meldung</td>\
							<td class="v-table-header-wrap">Erfolgreich</td>\
							<td class="v-table-header-wrap" colspan="5">Fehlgeschlagen</td>\
							<td class="v-table-header-wrap" rowspan="2">Meldungen<br/>Gesamt</td>\</td>\
							</tr><tr class="hdr">\
							<td class="v-table-header-wrap">OK</td>\
							<td class="v-table-header-wrap">Zeit\u00fcberschreitung</td>\
							<td class="v-table-header-wrap">Verbindungsaufbau</td>\
							<td class="v-table-header-wrap">Ohne Angabe</td>\
							<td class="v-table-header-wrap">Falsche Antwort</td>\
							<td class="v-table-header-wrap">Sonstige</td>\
							</tr>' html
report.0.sql.2.postgres=SELECT '<tr class="row'||MOD( ROW_NUMBER() OVER(), 2 )||' tcenter">\
							<td class="tleft">'||CT_NAME||'</td>\
							<td>'||MIN_TERM||'</td>\
							<td>'||MAX_TERM||'</td>\
							<td>'||SUM_RC_1||'<br/>'||SUM_RC_PA_1||' %</td>\
							<td>'||SUM_RC_2||'<br/>'||SUM_RC_PA_2||' %</td>\
							<td>'||SUM_RC_3||'<br/>'||SUM_RC_PA_3||' %</td>\
							<td>'||SUM_RC_4||'<br/>'||SUM_RC_PA_4||' %</td>\
							<td>'||SUM_RC_5||'<br/>'||SUM_RC_PA_5||' %</td>\
							<td>'||SUM_RC_OTHER||'<br/>'||SUM_RC_PA_OTHER||' %</td>\
							<td>'||SUM_RC_ALL||'<br/>100.0 %</td>\
						</tr>' html \
               FROM ( \
                 	SELECT  \
					  lo.TASK_ID,  \
					  lo.HOST,  \
					  MIN(ct.NAME) AS CT_NAME,  \
					  MIN(ct.START_DATE) AS CT_START_DATE,  \
					  MIN(ct.END_DATE) AS CT_END_DATE,  \
					  MIN(ct.START_TIME) AS CT_START_TIME,  \
					  MIN(ct.END_TIME) AS CT_END_TIME,  \
					  MIN(ct.TIMEOUT) AS CT_TIMEOUT,  \
					  MIN(ct.PAUSE) AS CT_PAUSE,  \
					  MIN(sen.NAME) AS SENSOR_NAME,  \
					  MIN(sen.SENSOR_TYP_ID) AS SENSOR_TYP_ID,  \
					  MIN(lo.TERM) AS MIN_TERM,  \
					  MAX(lo.TERM) AS MAX_TERM,  \
					  MIN(mon.NAME) AS MONITOR_NAME,  \
					  MIN(mon.HOST) AS MONITOR_HOST,  \
					  SUM( CASE WHEN lo.RESULT_ID = 1 THEN 1 ELSE  0 END ) AS SUM_RC_1,  \
					  SUM( CASE WHEN lo.RESULT_ID = 2 THEN 1 ELSE  0 END ) AS SUM_RC_2,  \
					  SUM( CASE WHEN lo.RESULT_ID = 3 THEN 1 ELSE  0 END ) AS SUM_RC_3,  \
					  SUM( CASE WHEN lo.RESULT_ID = 4 THEN 1 ELSE  0 END ) AS SUM_RC_4,  \
					  SUM( CASE WHEN lo.RESULT_ID = 5 THEN 1 ELSE  0 END ) AS SUM_RC_5,  \
					  SUM( CASE WHEN lo.RESULT_ID BETWEEN 1 AND 5 THEN 0 ELSE  1 END )  AS SUM_RC_OTHER,  \
					  COUNT( lo.RESULT_ID ) SUM_RC_ALL,  \
					  to_char(  ROUND(SUM( CASE WHEN lo.RESULT_ID = 1 THEN 1 ELSE  0 END ) / COUNT( RESULT_ID ) * 100, 1) ,'990.0') AS SUM_RC_PA_1,  \
					  to_char(  ROUND(SUM( CASE WHEN lo.RESULT_ID = 2 THEN 1 ELSE  0 END ) / COUNT( RESULT_ID ) * 100, 1) ,'990.0') AS SUM_RC_PA_2,  \
					  to_char(  ROUND(SUM( CASE WHEN lo.RESULT_ID = 3 THEN 1 ELSE  0 END ) / COUNT( RESULT_ID ) * 100, 1) ,'990.0') AS SUM_RC_PA_3,  \
					  to_char(  ROUND(SUM( CASE WHEN lo.RESULT_ID = 4 THEN 1 ELSE  0 END ) / COUNT( RESULT_ID ) * 100, 1) ,'990.0') AS SUM_RC_PA_4,  \
					  to_char(  ROUND(SUM( CASE WHEN lo.RESULT_ID = 5 THEN 1 ELSE  0 END ) / COUNT( RESULT_ID ) * 100, 1) ,'990.0') AS SUM_RC_PA_5,  \
					  to_char(  ROUND(SUM( CASE WHEN lo.RESULT_ID BETWEEN 1 AND 5 THEN 0 ELSE 1 END ) / COUNT( RESULT_ID ) * 100, 1) ,'990.0')  AS SUM_RC_PA_OTHER  \
					FROM GDI_LOG_SENSOR lo, GDI_CHECK_TASK ct, GDI_SENSOR sen, GDI_MONITOR mon  \
					WHERE lo.TASK_ID = ct.TASK_ID  \
					AND ct.SENSOR_ID = sen.SENSOR_ID  \
					AND sen.DAEMON_ID = mon.DAEMON_ID  \
					AND lo.TERM >= :timeStart \
					AND lo.TERM <= :timeEnd \
					GROUP BY lo.TASK_ID, lo.HOST \
               ) AS T1
report.0.sql.3.postgres=SELECT '</table>' html
report.0.sql.4.postgres=SELECT '<br><p>Abfragezeitraum von: '||TO_CHAR(CAST (:timeStart AS timestamp),'dd.mm.yyyy HH24:MI:SS')||' bis: '||TO_CHAR(CAST (:timeEnd AS timestamp),'dd.mm.yyyy HH24:MI:SS')||'.</p>' html

sql.static.sensorstatus.oracle=SELECT \
			TASK_ID, RESULT_ID, TERM, DURATION, DETAILS, HOST, RESULT_NAME, CHECK_TASK_NAME, \
			START_DATE, END_DATE, START_TIME, END_TIME, \
			PAUSE, TIMEOUT, CHECKDAY_0, CHECKDAY_1, CHECKDAY_2, CHECKDAY_3, CHECKDAY_4, CHECKDAY_5, CHECKDAY_6, SENSOR_NAME, SENSOR_TYP_ID, SENSOR_TYP_NAME, MONITOR_NAME, MONITOR_STATUS, SYSDATE, SORT_ID FROM (		\
	SELECT 	\
		ct.TASK_ID, 	\
		0 AS RESULT_ID, 	\
		TO_DATE(null) AS TERM, 	\
		0 AS DURATION, 	\
		null AS DETAILS, 	\
		null AS HOST, 	\
		null AS RESULT_NAME, 	\
		ct.NAME AS CHECK_TASK_NAME, 	\
		ct.START_DATE, 	\
		ct.END_DATE, 	\
		ct.START_TIME, 	\
		ct.END_TIME, 	\
		ct.PAUSE, ct.TIMEOUT, 	\
		ct.CHECKDAY_0, ct.CHECKDAY_1, 	\
		ct.CHECKDAY_2, ct.CHECKDAY_3, 	\
		ct.CHECKDAY_4, ct.CHECKDAY_5, 	\
		ct.CHECKDAY_6,	\
		se.NAME AS SENSOR_NAME, 	\
		se.SENSOR_TYP_ID, 	\
		st.NAME AS SENSOR_TYP_NAME, 	\
		mo.NAME AS MONITOR_NAME, 	\
		mo.STATUS AS MONITOR_STATUS, 	\
		SYSDATE, 	\
		999 AS SORT_ID 	\
	FROM 	\
		GDI_CHECK_TASK ct, 	\
		GDI_SENSOR se, 	\
		GDI_SENSOR_TYP st, 	\
		GDI_MONITOR mo 	\
	WHERE 	\
		  ct.TASK_ID NOT IN ( SELECT DISTINCT TASK_ID FROM  GDI_LOG_SENSOR ) 	\
	AND ct.SENSOR_ID = se.SENSOR_ID 	\
	AND se.SENSOR_TYP_ID = st.SENSOR_TYP_ID  	\
	AND se.DAEMON_ID = mo.DAEMON_ID 	\
	UNION ALL 	\
	SELECT 	\
		lo.TASK_ID, 	\
		lo.RESULT_ID, 	\
		lo.TERM, 	\
		lo.DURATION, 	\
		lo.DETAILS, 	\
		lo.HOST, 	\
		rc.NAME AS RESULT_NAME, 	\
		ct.NAME AS CHECK_TASK_NAME, 	\
		ct.START_DATE, 	\
		ct.END_DATE, 	\
		ct.START_TIME, 	\
		ct.END_TIME, 	\
		ct.PAUSE, ct.TIMEOUT, 	\
		ct.CHECKDAY_0, ct.CHECKDAY_1, 	\
		ct.CHECKDAY_2, ct.CHECKDAY_3, 	\
		ct.CHECKDAY_4, ct.CHECKDAY_5, 	\
		ct.CHECKDAY_6,	\
		se.NAME AS SENSOR_NAME, 	\
		se.SENSOR_TYP_ID, 	\
		st.NAME AS SENSOR_TYP_NAME, 	\
		mo.NAME AS MONITOR_NAME, 	\
		mo.STATUS AS MONITOR_STATUS, 	\
		SYSDATE, 	\
		mo.STATUS AS SORT_ID 	\
	FROM 	\
		GDI_LOG_SENSOR lo, 	\
		GDI_RESULTCODE rc, 	\
		GDI_CHECK_TASK ct, 	\
		GDI_SENSOR se, 	\
		GDI_SENSOR_TYP st, 	\
		GDI_MONITOR mo 	\
	WHERE 	\
		  lo.LOG_ID IN ( SELECT MAX(LOG_ID) FROM  GDI_LOG_SENSOR GROUP BY TASK_id ) 	\
	AND rc.RESULT_ID = lo.RESULT_ID 	\
	AND lo.TASK_ID = ct.TASK_ID 	\
	AND ct.SENSOR_ID = se.SENSOR_ID 	\
	AND se.SENSOR_TYP_ID = st.SENSOR_TYP_ID 	\
	AND se.DAEMON_ID = mo.DAEMON_ID	\
	) ORDER BY SORT_ID DESC, TASK_ID 
	
sql.static.sensorstatus.postgres=SELECT \
			TASK_ID, RESULT_ID, TERM, DURATION, DETAILS, HOST, RESULT_NAME, CHECK_TASK_NAME, \
			START_DATE, END_DATE, START_TIME, END_TIME, \
			PAUSE, TIMEOUT, CHECKDAY_0, CHECKDAY_1, CHECKDAY_2, CHECKDAY_3, CHECKDAY_4, CHECKDAY_5, CHECKDAY_6, SENSOR_NAME, SENSOR_TYP_ID, SENSOR_TYP_NAME, MONITOR_NAME, MONITOR_STATUS, SYSDATE, SORT_ID FROM (		\
	SELECT 	\
		ct.TASK_ID, 	\
		0 AS RESULT_ID, 	\
		null AS TERM, 	\
		0 AS DURATION, 	\
		null AS DETAILS, 	\
		null AS HOST, 	\
		null AS RESULT_NAME, 	\
		ct.NAME AS CHECK_TASK_NAME, 	\
		ct.START_DATE, 	\
		ct.END_DATE, 	\
		ct.START_TIME, 	\
		ct.END_TIME, 	\
		ct.PAUSE, ct.TIMEOUT, 	\
		ct.CHECKDAY_0, ct.CHECKDAY_1, 	\
		ct.CHECKDAY_2, ct.CHECKDAY_3, 	\
		ct.CHECKDAY_4, ct.CHECKDAY_5, 	\
		ct.CHECKDAY_6,	\
		se.NAME AS SENSOR_NAME, 	\
		se.SENSOR_TYP_ID, 	\
		st.NAME AS SENSOR_TYP_NAME, 	\
		mo.NAME AS MONITOR_NAME, 	\
		mo.STATUS AS MONITOR_STATUS, 	\
		NOW() AS SYSDATE, 	\
		false AS SORT_ID 	\
	FROM 	\
		GDI_CHECK_TASK ct, 	\
		GDI_SENSOR se, 	\
		GDI_SENSOR_TYP st, 	\
		GDI_MONITOR mo 	\
	WHERE 	\
		  ct.TASK_ID NOT IN ( SELECT DISTINCT TASK_ID FROM  GDI_LOG_SENSOR ) 	\
	AND ct.SENSOR_ID = se.SENSOR_ID 	\
	AND se.SENSOR_TYP_ID = st.SENSOR_TYP_ID  	\
	AND se.DAEMON_ID = mo.DAEMON_ID 	\
	UNION ALL 	\
	SELECT 	\
		lo.TASK_ID, 	\
		lo.RESULT_ID, 	\
		lo.TERM, 	\
		lo.DURATION, 	\
		lo.DETAILS, 	\
		lo.HOST, 	\
		rc.NAME AS RESULT_NAME, 	\
		ct.NAME AS CHECK_TASK_NAME, 	\
		ct.START_DATE, 	\
		ct.END_DATE, 	\
		ct.START_TIME, 	\
		ct.END_TIME, 	\
		ct.PAUSE, ct.TIMEOUT, 	\
		ct.CHECKDAY_0, ct.CHECKDAY_1, 	\
		ct.CHECKDAY_2, ct.CHECKDAY_3, 	\
		ct.CHECKDAY_4, ct.CHECKDAY_5, 	\
		ct.CHECKDAY_6,	\
		se.NAME AS SENSOR_NAME, 	\
		se.SENSOR_TYP_ID, 	\
		st.NAME AS SENSOR_TYP_NAME, 	\
		mo.NAME AS MONITOR_NAME, 	\
		mo.STATUS AS MONITOR_STATUS, 	\
		NOW() AS SYSDATE, 	\
		mo.STATUS AS SORT_ID 	\
	FROM 	\
		GDI_LOG_SENSOR lo, 	\
		GDI_RESULTCODE rc, 	\
		GDI_CHECK_TASK ct, 	\
		GDI_SENSOR se, 	\
		GDI_SENSOR_TYP st, 	\
		GDI_MONITOR mo 	\
	WHERE 	\
		  lo.LOG_ID IN ( SELECT MAX(LOG_ID) FROM  GDI_LOG_SENSOR GROUP BY TASK_id ) 	\
	AND rc.RESULT_ID = lo.RESULT_ID 	\
	AND lo.TASK_ID = ct.TASK_ID 	\
	AND ct.SENSOR_ID = se.SENSOR_ID 	\
	AND se.SENSOR_TYP_ID = st.SENSOR_TYP_ID 	\
	AND se.DAEMON_ID = mo.DAEMON_ID	\
	) AS T1 ORDER BY SORT_ID DESC, TASK_ID 
	

# Mgl. Berechtigungen fuer WMS und WFS
#
#api.beans.status.write=true
#api.beans.status.class=de.grit.monsuite.api.data.Status
#api.beans.status.select=ergebnisDetails,pruefdauer
#api.beans.status.fetch.0=ergebnisDetails
#api.beans.status.fetch.1=pruefdauer
#api.beans.status.fetch.categories=ergebnisDetails,pruefdauer
#api.beans.status.fetch.1=links
#api.beans.status.fetch.links=usage,href,rel,type,title,length,lang,bbox,time
#api.beans.status.fetch.2=persons
#api.beans.status.fetch.persons=usage,name,uri,email
#api.beans.status.fetch.3=entries
#api.beans.status.fetch.entries=uuid,updated,title,titleTyp,georss,srs,categories,links
#api.beans.status.fetch.4=service
#api.beans.status.fetch.service=uuid,title
#api.beans.status.fetch.5=entries.categories
#api.beans.status.fetch.entries.categories=usage,term,scheme,label,lang
#api.beans.status.fetch.6=entries.links
#api.beans.status.fetch.entries.links=usage,href,rel,type,title,length,lang,bbox,time



#api.beans.checktaskresult.write=true
#api.beans.checktaskresult.allow_fetch=true
#api.beans.checktaskresult.class=de.grit.monsuite.api.data.ChecktaskResult
#api.beans.checktaskresult.select=jobID,name,startdatum,enddatum,startzeit,endzeit,pause,timeout,prueftage,type,url,version,featuresVerfuegbarkeit,featuresInhalt,layerVerfuegbarkeit,layerBildpruefung,styleBildpruefung,koordinatenreferenzsystem,achsenorientierung,boundingBox,regulaererAusdruckGueltig,regulaererAusdruckUngueltig,rueckgabecode,sqlVerbindungsadresse,sqlBenutzername,sqlPasswort,sqlBefehl,collection,collectionInhalt,feature,proxyserver,httpBenutzer,httpPasswort,basisparameter,pruefparameter
#api.beans.checktaskresult.fetch.0=jobID
#api.beans.checktaskresult.fetch.1=basisparameter
#api.beans.checktaskresult.fetch.basisparameter=name,startdatum,enddatum,startzeit,endzeit,pause,timeout,prueftage
#api.beans.checktaskresult.fetch.2=pruefparameter
#api.beans.checktaskresult.fetch.pruefparameter=type,url,version,featuresVerfuegbarkeit,featuresInhalt,layerVerfuegbarkeit,layerBildpruefung,styleBildpruefung,koordinatenreferenzsystem,achsenorientierung,boundingBox,regulaererAusdruckGueltig,regulaererAusdruckUngueltig,rueckgabecode,sqlVerbindungsadresse,sqlBenutzername,sqlPasswort,sqlBefehl,collection,collectionInhalt,feature
#api.beans.checktaskresult.fetch.3=proxyparameter
#api.beans.checktaskresult.fetch.proxyparameter=proxyserver,httpBenutzer,httpPasswort
#api.beans.checktaskresult.fetch.1=links
#api.beans.checktaskresult.fetch.links=usage,href,rel,type,title,length,lang,bbox,time
#api.beans.checktaskresult.fetch.2=persons
#api.beans.checktaskresult.fetch.persons=usage,name,uri,email
#api.beans.checktaskresult.fetch.3=entries
#api.beans.checktaskresult.fetch.entries=uuid,updated,title,titleTyp,georss,srs,categories,links
#api.beans.checktaskresult.fetch.4=service
#api.beans.checktaskresult.fetch.service=uuid,title
#api.beans.checktaskresult.fetch.5=entries.categories
#api.beans.checktaskresult.fetch.entries.categories=usage,term,scheme,label,lang
#api.beans.checktaskresult.fetch.6=entries.links
#api.beans.checktaskresult.fetch.entries.links=usage,href,rel,type,title,length,lang,bbox,time
api.secret=1234567890abcdefghIJKLMNOQrstuvwXyZ

api.wmsbasic.required=name,type,pause,timeout,checkday,url,versionString,layerAvail,layerImgCheck,stylesImgCheck,srs,rotation,bbox
api.wfsbasic.required=name,type,pause,timeout,checkday,url,versionString,featureCap,featureGet
api.httpchk.required=name,type,pause,timeout,checkday,url,versionString
api.oafbasic.required=name,type,pause,timeout,checkday,url,versionString
api.sqloracle.required=name,type,pause,timeout,checkday,url,versionString
api.sqlpg.required=name,type,pause,timeout,checkday,url,versionString

#mapping.state.intf=
#mapping.state.outtf=
#mapping.state.res_err=
#mapping.state.res_ok=
#mapping.state.res_unknown=
#mapping.state.time_err=
#mapping.state.time_warn=
#mapping.state.trans=
